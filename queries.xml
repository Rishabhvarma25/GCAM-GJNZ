<?xml version="1.0" encoding="UTF-8"?>
<queries>
  
  <!-- Emissions -->
  <aQuery>
	<all-regions/>
	<emissionsQueryBuilder title="CO2 emissions by aggregate sector">
    <axis1 name="sector">sector</axis1>
    <axis2 name="Year">emissions</axis2>
    <xPath buildList="true" dataName="emissions" group="false" sumAll="false">*[@type='sector']//CO2/emissions/node()</xPath>
    <comments/>
	<labelRewriteList append-values="false">
        <level name="sector">
            <rewrite from="electricity" to="Power"/>
            <rewrite from="Agriculture_enuse" to="Industry"/>
            <rewrite from="Chem_Fert_enuse" to="Industry"/>
			<rewrite from="Chem_Fert_fsuse" to="IPPU"/>
            <rewrite from="Fisheries_enuse" to="Industry"/>
			<rewrite from="Other Industries_fsuse" to="IPPU"/>
			<rewrite from="process heat cement" to="Industry"/>
            <rewrite from="Food Processing_enuse" to="Industry"/>
            <rewrite from="Iron and Steel_enuse" to="Industry"/>
            <rewrite from="Iron and Steel_fsuse" to="IPPU"/>
            <rewrite from="Non-Ferrous Metals_enuse" to="Industry"/>
            <rewrite from="Other Industries_enuse" to="Industry"/>
            <rewrite from="Paper and Pulp_enuse" to="Industry"/>
			<rewrite from="oil refining" to="Industry"/>
			<rewrite from="cement" to="IPPU"/>
            <rewrite from="comm cooking" to="Building"/>
            <rewrite from="comm hvac" to="Building"/>
			<rewrite from="comm lighting" to="Building"/>
            <rewrite from="comm others" to="Building"/>
			<rewrite from="comm ref" to="Building"/>
			<rewrite from="resid rural apploth" to="Building"/>
            <rewrite from="resid rural cooking" to="Building"/>
			<rewrite from="resid rural space heating" to="Building"/>
            <rewrite from="resid rural lighting" to="Building"/>
			<rewrite from="resid rural coolers" to="Building"/>
            <rewrite from="resid rural cooling" to="Building"/>
			<rewrite from="resid urban apploth" to="Building"/>
            <rewrite from="resid urban cooking" to="Building"/>
			<rewrite from="resid urban space heating" to="Building"/>
            <rewrite from="resid urban lighting" to="Building"/>
			<rewrite from="resid urban coolers" to="Building"/>
            <rewrite from="resid urban cooling" to="Building"/>
			<rewrite from="trn_aviation_intl" to="Transport"/>
			<rewrite from="trn_freight" to="Transport"/>
            <rewrite from="trn_freight_road" to="Transport"/>
			<rewrite from="trn_pass" to="Transport"/>
			<rewrite from="trn_pass_road" to="Transport"/>
            <rewrite from="trn_pass_road_LDV" to="Transport"/>
			<rewrite from="trn_pass_road_LDV_2W" to="Transport"/>
			<rewrite from="trn_pass_road_LDV_4W" to="Transport"/>
            <rewrite from="trn_shipping_intl" to="Transport"/>
			<rewrite from="biomass liquids" to="Industry"/>
        </level>
    </labelRewriteList>
	</emissionsQueryBuilder>
	</aQuery>

	<aQuery>
	<all-regions/>
	<emissionsQueryBuilder title="CO2 emissions by subsector">
                <axis1 name="subsector">subsector</axis1>
                <axis2 name="Year">emissions</axis2>
                <xPath buildList="true" dataName="emissions"
                    group="false" sumAll="false">*[@type = 'sector' ]/*[@type='subsector']//CO2/emissions/node()</xPath>
                <comments/>
            </emissionsQueryBuilder>
	</aQuery>
    
	
	<!-- Socioeconomics -->
    <aQuery>
	<all-regions/>
         <gdpQueryBuilder title="GDP by region">
            <axis1 name="region">region</axis1>
            <axis2 name="Year">gdp-mer</axis2>
            <xPath buildList="true" dataName="gdp-mer" group="false" sumAll="false">GDP/gdp-mer/text()</xPath>
            <comments/>
         </gdpQueryBuilder>
      </aQuery>

      <aQuery>
	<all-regions/>
        <gdpQueryBuilder title="PPP GDP by region">
          <axis1 name="Region">region</axis1>
          <axis2 name="Year">gdp-per-capita-ppp</axis2>
          <xPath buildList="true" dataName="gdp-per-capita-ppp" group="false" sumAll="false">GDP/gdp-per-capita-ppp/text()</xPath>
          <comments/>
	</gdpQueryBuilder>
      </aQuery>

      <aQuery>
	<all-regions/>
         <demographicsQuery title="Population by region">
            <axis1 name="region">region</axis1>
            <axis2 name="Year">populationMiniCAM</axis2>
            <xPath buildList="true" dataName="total-population" group="false" sumAll="false">demographics/populationMiniCAM/total-population/node()</xPath>
            <comments/>
         </demographicsQuery>
      </aQuery>
	
	<!-- Electricity sector-->
	<aQuery>
    <all-regions/>
    <supplyDemandQuery title="elec gen by region (incl CHP)">
    <axis1 name="region">region</axis1>
    <axis2 name="Year">physical-output[@vintage]</axis2>
    <xPath buildList="true" dataName="output" group="false" sumAll="true">*[@type='sector' (:collapse:)]//
               *[@type='technology' (:collapse:) and not (@name='elect_td_bld')]/
               *[@type='output' (:collapse:)  and (@name='electricity' or @name='elect_td_bld')]/
               physical-output/node()</xPath>
    <comments/>
	</supplyDemandQuery>
  </aQuery>

	<aQuery>
    <all-regions/>
    <supplyDemandQuery title="elec gen by subsector">
                    <axis1 name="subsector">subsector</axis1>
                    <axis2 name="Year">physical-output[@vintage]</axis2>
                    <xPath buildList="true" dataName="output"
                        group="false" sumAll="false">*[@type='sector' (:collapse:) and (@name='electricity' or @name='elect_td_bld')]/
               *[@type='subsector' and not (@name='elect_td_bld')]//*[@type='output']/
               physical-output/node()</xPath>
    <comments/>
	</supplyDemandQuery>
	</aQuery>

	<!-- Final energy Consumption -->
	
   <aQuery>
     <all-regions/>
     <supplyDemandQuery title="total final energy by region">
    <axis1 name="region">region</axis1>
    <axis2 name="Year">demand-physical[@vintage]</axis2>
    <xPath buildList="true" dataName="input" group="false" sumAll="false">*[@type='sector' (:collapse:) and ((@name='building' or @name='industry' or @name='transportation') or
            (exists(child::keyword/@final-energy)))]//*[@type='input' (:collapse:) and
            not(@name='limestone' or @name='process heat cement' or @name='industrial energy use' or
                @name='industrial feedstocks' or @name='renewable' or contains(@name, 'trn_') or @name='oil-credits')]/
            demand-physical[@unit='EJ']/node()</xPath>
    <comments/>
	</supplyDemandQuery>
   </aQuery>

	<aQuery>
	<all-regions/>
	<supplyDemandQuery title="primary energy consumption by region (avg fossil efficiency)">
    <axis1 name="fuel">input[@name]</axis1>
    <axis2 name="Year">demand-physical[@vintage]</axis2>
    <xPath buildList="true" dataName="input" group="false" sumAll="false"><![CDATA[ 
      	 	 	 declare function local:get-weighted-eff($outputs as node()*) as node()* {
			 	 		   unordered {
			 			     for $year in distinct-values($outputs/physical-output/@vintage)
			 		             let $eff_unweight := sum(for $res in $outputs/physical-output[@vintage = $year]
			 		                               let $eff_curr := $res/parent::*/following-sibling::input-energy[1]/IO-coefficient[@vintage = $year]
			 		                               (: where $res/physical-output/@vintage = $year :)
			 		                               return $res div $eff_curr),
			 			             $weight := sum(for $res in $outputs/physical-output[@vintage = $year]
			 		                         (: where $res/physical-output/@vintage = $year :)
			 		                         return $res),
			 			             $eff_weighted := $eff_unweight div $weight
			 		             return element efficiency-weighted {attribute year { $year }, text { $eff_weighted }}
			             		}
			 	 	 };
			 	 	 declare function local:append-heirarchy($parent as node(), $append as node()) as node() {
			 	 		 let $scn := $parent/ancestor::scenario,
			 			   	  $rgn := $parent/ancestor::region
			 			   return
			 			   	  document { element scenario {
			 			 	  					$scn/@*,
			 			 						element region {
			 			 							$rgn/@*,
			 			 							$append
			 			 						}
			 			 	  				}
			 				}
			 	 		 (: let $new_node := element {local-name($parent)} {$parent/@*, $append} 	
			 	 		 return
			 	 		 if(local-name($parent) != 'scenario')
			 	 		 then local:append-heirarchy($parent/parent::*, $new_node)
			 	 		 else document { $new_node } :)
			 	 	 };  
			 	 	 declare function local:get-primary-renewable($outputs as node()*, $weighted_effs as node()*) as node()* {
			 	 	 unordered { 	
			 	 	 for $output in $outputs (:,
			 	 	 $weighted_eff in $weighted_effs :)
			 	 	 let $new_output :=  (: element tempParent { :)
			 	 	 element input {
			 	 		 attribute type {'input'},
			 	 		 attribute name {$output/parent::*/following-sibling::keyword/@primary-renewable},
			 	 		 element demand-physical {
			 	 			 attribute vintage {$output/@vintage},
			 	 			 attribute unit {$output/@unit},
			 	 			 text { $output div $weighted_effs[@year=$output/@vintage] }
			 	 		 }(: ,
			 	 		 element keyword {
			 	 			 attribute primary-consumption { (: if($output/parent::*/following-sibling::keyword[fn:exists(@primary-renewable)])
			 	 						 then :) $output/parent::*/following-sibling::keyword/@primary-renewable
			 	 						 (: else $output/parent::*/parent::*/@name :)
			 	 		       }
			 	 		 } :)
			 	 	 (: } :)
			 	 	 },
			 	 	 $new_root := local:append-heirarchy($output/parent::*/parent::*, $new_output)
			 	 	 (:where $output/@vintage = $weighted_eff/@year:)
			 	 	 return $new_root//text()
			 	 	 } 
			 	 	 };
			 	 	 declare function local:check-keyword($values as node()*) as node()* {
			 	 	 	unordered {
			 	 		for $value in $values
			 	 		let $input := $value/parent::*/parent::*,
			 	 		    $keyword_name :=
			 	 		        (: if($input/following-sibling::keyword[fn:exists(@primary-consumption)])
			 	 			then :) $input/following-sibling::keyword/@primary-consumption
			 	 			(: else $input/@name :), 
			 	 		    $new_parent := element {local-name($input)} {$input/@*, 
			 	 			$value/parent::*,
			 	 		        element keyword { attribute primary-consumption {$keyword_name} }
			 	 		        },
			 	 		    $new_root := local:append-heirarchy($input/parent::*, $new_parent)
			 	 		return $new_root//text()
			 	 		}
			 	 	};
			 	 
			 	 	 declare function local:run-primary-energy($scenarios as xs:string*, $regions as xs:string*, $collection as xs:string) as node()* { 	
			 	 	 (: unordered { :)
			 	 	 let $regionsG := if(not($regions[1] = 'Global'))
			 	 	 		  then $regions
			 	 	 		  else distinct-values(collection($collection)/scenario/world/*[@type='region']/@name)
			 	 	 return
			 	 	 for $scenario in $scenarios, 	    
			 	 	 $region in $regionsG 	
			 	 	 let $scenario_split := tokenize($scenario, ' '),
                     $scenario_name := string-join($scenario_split[position() < last()], ' '),
			 	 	 $scenario_date := $scenario_split[last()],
			 	 	 $currTree := collection($collection)/scenario[@name = $scenario_name and @date = $scenario_date]/world/*[@type = 'region' and @name=$region]
			 	 	 return (: get renewables from electricity :)
			 	 	 local:get-primary-renewable($currTree/*[@type='sector' (: collapse :) and (@name='electricity' or @name='elect_td_bld' or starts-with(@name,'elec_'))]//keyword[fn:exists(@primary-renewable)]/preceding-sibling::output-primary/physical-output, local:get-weighted-eff($currTree/*[@type='sector' (: collapse :) and (@name='electricity' or starts-with(@name, 'elec_'))]//keyword[fn:exists(@average-fossil-efficiency)]/preceding-sibling::output-primary)) 
					 		 	| (: get renewables from H2ProdCS :)
					 	 	 	local:get-primary-renewable($currTree/supplysector[@name='H2 central production'](: /*[@type='subsector' (: collapse :) and fn:not(@name='electrolysis')] :)//keyword[fn:exists(@primary-renewable)]/preceding-sibling::output-primary/physical-output, local:get-weighted-eff($currTree/supplysector[@name='H2 central production']//keyword[fn:exists(@average-fossil-efficiency)]/preceding-sibling::output-primary)) 
					 	 	 	| (: get renewables from H2ProdDist :)
					 	 	 	local:get-primary-renewable($currTree/supplysector[@name='H2 forecourt production'](: /*[@type='subsector' (: collapse :) and fn:not(@name='electrolysis')] :)//keyword[fn:exists(@primary-renewable)]/preceding-sibling::output-primary/physical-output, local:get-weighted-eff($currTree/supplysector[@name='H2 forecourt production']//keyword[fn:exists(@average-fossil-efficiency)]/preceding-sibling::output-primary)) 
					 	 	 	| (: get the primaries :)
	 	 						(: local:check-keyword( :) $currTree//keyword[fn:exists(@primary-consumption)]/preceding-sibling::input-energy[not(contains(@name, 'water'))]/demand-physical/text() (: ) :)
                                | (: get traditional biomass :)
							    $currTree//*[@type='input' and @name='traditional biomass']/demand-physical/node()
			 	 	 	
			 	 	 (: } :)
	 	 }; 
            	 local:run-primary-energy((:scenarios:), (:regions:), (:collection:))
                 
            ]]></xPath>
    <comments/>
    <labelRewriteList append-values="false">
        <level name="input">
            <rewrite from="exotic-elect" to="j breakthrough"/>
            <rewrite from="wind-H2" to="g wind"/>
            <rewrite from="biomass" to="d biomass"/>
            <rewrite from="traditional biomass" to="j traditional biomass"/>
            <rewrite from="regional corn for ethanol" to="d biomass"/>
            <rewrite from="crude oil" to="a oil"/>
            <rewrite from="nuclear-elect" to="e nuclear"/>
            <rewrite from="solar-H2" to="h solar"/>
            <rewrite from="regional natural gas" to=""/>
            <rewrite from="regional biomassOil" to="d biomass"/>
            <rewrite from="traded unconventional oil" to="a oil"/>
            <rewrite from="geothermal-elect" to="i geothermal"/>
            <rewrite from="natural gas" to="b natural gas"/>
            <rewrite from="wholesale gas" to=""/>
            <rewrite from="hydro-elect" to="f hydro"/>
            <rewrite from="solar-elect" to="h solar"/>
            <rewrite from="coal" to="c coal"/>
            <rewrite from="elect_td_ind" to=""/>
            <rewrite from="wind-elect" to="g wind"/>
            <rewrite from="total biomass" to="d biomass"/>
            <rewrite from="nuclear-H2" to="e nuclear"/>
        </level>
    </labelRewriteList>
	</supplyDemandQuery>
	</aQuery>


	<aQuery>
     <all-regions/>
     <supplyDemandQuery title="final energy consumption by sector and fuel">
                    <axis1 name="input">input</axis1>
                    <axis2 name="Year">demand-physical[@vintage]</axis2>
                    <xPath buildList="true" dataName="input"
                        group="false" sumAll="false">*[@type='sector' and ((@name='building' or @name='industry' or @name='transportation') or
            (exists(child::keyword/@final-energy)))]//*[@type='input' and
            not(@name='limestone' or @name='process heat cement' or @name='industrial energy use' or
                @name='industrial feedstocks' or @name='renewable' or contains(@name, 'trn_') or @name='oil-credits')]/
            demand-physical[@unit='EJ']/node()</xPath>
                    <comments/>
                    <labelRewriteList append-values="false">
                        <level name="input">
                            <rewrite from="wholesale gas" to="gas"/>
                            <rewrite from="regional coal" to="coal"/>
                            <rewrite from="refined liquids enduse" to="refined liquids"/>
                            <rewrite from="regional biomass" to="biomass"/>
                            <rewrite from="H2 enduse" to="hydrogen"/>
                            <rewrite from="elect_td_ind" to="electricity"/>
							<rewrite from="elect_td_res" to="electricity"/>
							<rewrite from="elect_td_com" to="electricity"/>
                            <rewrite from="delivered biomass" to="biomass"/>
                            <rewrite from="elect_td_trn" to="electricity"/>
                            <rewrite from="delivered coal" to="coal"/>
                            <rewrite from="refined liquids industrial" to="refined liquids"/>
                            <rewrite from="delivered gas" to="gas"/>
                        </level>
                    </labelRewriteList>
                </supplyDemandQuery>

    </aQuery>
	
	
	<aQuery>
	<all-regions/>
	<supplyDemandQuery title="final energy consumption by aggregate sector and fuel">
    <axis1 name="input">input</axis1>
    <axis2 name="Year">demand-physical[@vintage]</axis2>
    <xPath buildList="true" dataName="input" group="false" sumAll="false">*[@type='sector' and ((@name='building' or @name='industry' or @name='transportation') or
            (exists(child::keyword/@final-energy)))]//*[@type='input' and
            not(@name='limestone' or @name='process heat cement' or @name='industrial energy use' or
                @name='industrial feedstocks' or @name='renewable' or contains(@name, 'trn_') or @name='oil-credits')]/
            demand-physical[@unit='EJ']/node()</xPath>
    <comments/>
	<labelRewriteList append-values="false">
        <level name="sector">
            <rewrite from="Agriculture_enuse" to="Agriculture"/>
            <rewrite from="Chem_Fert_enuse" to="Industry"/>
			<rewrite from="Chem_Fert_fsuse" to="Industry"/>
            <rewrite from="Fisheries_enuse" to="Industry"/>
			<rewrite from="Other Industries_fsuse" to="Industry"/>
			<rewrite from="process heat cement" to="Industry"/>
            <rewrite from="Food Processing_enuse" to="Industry"/>
            <rewrite from="Iron and Steel_enuse" to="Industry"/>
            <rewrite from="Iron and Steel_fsuse" to="Industry"/>
            <rewrite from="Non-Ferrous Metals_enuse" to="Industry"/>
            <rewrite from="Other Industries_enuse" to="Industry"/>
            <rewrite from="Paper and Pulp_enuse" to="Industry"/>
            <rewrite from="cement" to="Industry"/>
            <rewrite from="comm cooking" to="Building"/>
            <rewrite from="comm hvac" to="Building"/>
			<rewrite from="comm lighting" to="Building"/>
            <rewrite from="comm others" to="Building"/>
			<rewrite from="comm ref" to="Building"/>
			<rewrite from="resid rural apploth" to="Building"/>
            <rewrite from="resid rural cooking" to="Building"/>
			<rewrite from="resid rural space heating" to="Building"/>
            <rewrite from="resid rural lighting" to="Building"/>
			<rewrite from="resid rural coolers" to="Building"/>
            <rewrite from="resid rural cooling" to="Building"/>
			<rewrite from="resid urban apploth" to="Building"/>
            <rewrite from="resid urban cooking" to="Building"/>
			<rewrite from="resid urban space heating" to="Building"/>
            <rewrite from="resid urban lighting" to="Building"/>
			<rewrite from="resid urban coolers" to="Building"/>
            <rewrite from="resid urban cooling" to="Building"/>
			<rewrite from="trn_aviation_intl" to="Transport"/>
			<rewrite from="trn_freight" to="Transport"/>
            <rewrite from="trn_freight_road" to="Transport"/>
			<rewrite from="trn_pass" to="Transport"/>
			<rewrite from="trn_pass_road" to="Transport"/>
            <rewrite from="trn_pass_road_LDV" to="Transport"/>
			<rewrite from="trn_pass_road_LDV_2W" to="Transport"/>
			<rewrite from="trn_pass_road_LDV_4W" to="Transport"/>
            <rewrite from="trn_shipping_intl" to="Transport"/>
		</level>
        <level name="input">
            <rewrite from="elect_td_bld" to="electricity"/>
			<rewrite from="elect_td_res" to="electricity"/>
			<rewrite from="elect_td_com" to="electricity"/>
            <rewrite from="wholesale gas" to="gas"/>
            <rewrite from="regional coal" to="coal"/>
            <rewrite from="refined liquids enduse" to="refined liquids"/>
            <rewrite from="regional biomass" to="biomass"/>
            <rewrite from="H2 enduse" to="hydrogen"/>
            <rewrite from="elect_td_ind" to="electricity"/>
            <rewrite from="delivered biomass" to="biomass"/>
            <rewrite from="elect_td_trn" to="electricity"/>
            <rewrite from="delivered coal" to="coal"/>
            <rewrite from="refined liquids industrial" to="refined liquids"/>
            <rewrite from="delivered gas" to="gas"/>
        </level>
		</labelRewriteList>
</supplyDemandQuery>

	</aQuery>
   

	<!-- Transport -->
	<aQuery>
	<all-regions/>
	<supplyDemandQuery title="transport service output by mode">
    <axis1 name="mode">subsector</axis1>
    <axis2 name="Year">physical-output[@vintage]</axis2>
    <xPath buildList="true" dataName="output" group="false" sumAll="false">*[@type='sector' and (@name='transportation' or (exists(child::keyword[@final-energy='transportation'])))]/
               *[@type='subsector']//*[@type='output' (:collapse:) and not(@name='CAFEcredit')]/
               physical-output/node()</xPath>
    <comments/>
	<labelRewriteList append-values="false">
	<level name="mode">
		<rewrite from="Air International" to="Aviation"/>
		<rewrite from="Freight Rail" to="Rail"/>
		<rewrite from="Ship Domestic" to="Shipping"/>
		<rewrite from="Air Domestic" to="Aviation"/>
		<rewrite from="Passenger Rail" to="Rail"/>
		<rewrite from="LDV_2W" to="2W"/>
		<rewrite from="LDV_3W" to="3W"/>
		<rewrite from="LDV_4W" to="4W"/>
		<rewrite from="Ship International" to="Shipping"/>
		<rewrite from="Walk" to="NMT"/>
	</level>
	</labelRewriteList>
	</supplyDemandQuery>
	</aQuery>
	
	<aQuery>
	<all-regions/>
	<supplyDemandQuery title="transport final energy by mode and fuel">
    <axis1 name="mode">subsector</axis1>
    <axis2 name="Year">demand-physical[@vintage]</axis2>
    <xPath buildList="true" dataName="input" group="false" sumAll="false">*[@type='sector' and (@name='transportation' or (exists(child::keyword[@final-energy='transportation'])))]/
               *[@type='subsector']//*[@type='input' and not (@name='renewable')]/
               demand-physical[@unit='EJ']/node()</xPath>
    <comments/>
	<labelRewriteList append-values="false">
	<level name="sector">
		<rewrite from="trn_aviation_intl" to="Passenger"/>
			<rewrite from="trn_freight" to="Freight"/>
            <rewrite from="trn_freight_road" to="Freight"/>
			<rewrite from="trn_pass" to="Passenger"/>
			<rewrite from="trn_pass_road" to="Passenger"/>
            <rewrite from="trn_pass_road_LDV" to="Passenger"/>
			<rewrite from="trn_pass_road_LDV_2W" to="Passenger"/>
			<rewrite from="trn_pass_road_LDV_4W" to="Passenger"/>
            <rewrite from="trn_shipping_intl" to="Freight"/>
			<rewrite from="trn_shipping_intl" to="Passenger"/>	
			<rewrite from="trn_shipping_dom" to="Passenger"/>
	</level>
	<level name="mode">
		<rewrite from="Air International" to="Aviation"/>
		<rewrite from="Freight Rail" to="Rail"/>
		<rewrite from="Ship Domestic" to="Shipping"/>
		<rewrite from="Air Domestic" to="Aviation"/>
		<rewrite from="Passenger Rail" to="Rail"/>
		<rewrite from="LDV_2W" to="2W"/>
		<rewrite from="LDV_3W" to="3W"/>
		<rewrite from="LDV_4W" to="4W"/>
		<rewrite from="Ship International" to="Shipping"/>
		<rewrite from="Walk" to="NMT"/>
	</level>	
	</labelRewriteList>	
	</supplyDemandQuery>
	</aQuery>

		
	<aQuery>
	<all-regions/>
	<supplyDemandQuery title="transport final energy by fuel">
    <axis1 name="input">input</axis1>
    <axis2 name="Year">demand-physical[@vintage]</axis2>
    <xPath buildList="true" dataName="input" group="false" sumAll="false">*[@type='sector' (:collapse:) and (@name='transportation' or (exists(child::keyword[@final-energy='transportation'])))]//
               *[@type='input' and not (@name='renewable')]/demand-physical[@unit='EJ']/node()</xPath>
    <comments/>
	<labelRewriteList append-values="false">
	<level name="input">
		<rewrite from="wholesale gas" to="gas"/>
		<rewrite from="regional coal" to="coal"/>
		<rewrite from="refined liquids enduse" to="refined liquids"/>
		<rewrite from="regional biomass" to="biomass"/>
		<rewrite from="H2 enduse" to="hydrogen"/>
		<rewrite from="elect_td_ind" to="electricity"/>
		<rewrite from="elect_td_res" to="electricity"/>
		<rewrite from="elect_td_com" to="electricity"/>
		<rewrite from="elect_td_trn" to="electricity"/>
		<rewrite from="delivered biomass" to="biomass"/>
		<rewrite from="elect_td_trn" to="electricity"/>
		<rewrite from="delivered coal" to="coal"/>
		<rewrite from="refined liquids industrial" to="refined liquids"/>
		<rewrite from="delivered gas" to="gas"/>
	</level>
	</labelRewriteList>
	</supplyDemandQuery>
	</aQuery>

	
	
	
	<!-- Buildings -->
	   <aQuery>
	<all-regions/>
	<supplyDemandQuery title="Building floorspace">
          <axis1 name="Building">gcam-consumer[@name]</axis1>
          <axis2 name="Year">floorspace[@year]</axis2>
          <xPath buildList="true" dataName="floorspace" group="false" sumAll="false">gcam-consumer//floorspace/node()</xPath>
          <comments/>
	</supplyDemandQuery>
    </aQuery>
	
	<aQuery>
	<all-regions/>	
	<supplyDemandQuery title="building final energy by fuel">
    <axis1 name="input">input</axis1>
    <axis2 name="Year">demand-physical[@vintage]</axis2>
    <xPath buildList="true" dataName="input" group="false" sumAll="false">*[@type='sector' (:collapse:) and (@name='building' or (exists(child::keyword[@final-energy='building'])))]//
               *[@type='input']/demand-physical/node()</xPath>
    <comments/>
	<labelRewriteList append-values="false">
	<level name="input">
		<rewrite from="wholesale gas" to="natural gas"/>
		<rewrite from="regional coal" to="coal"/>
		<rewrite from="refined liquids enduse" to="refined liquids"/>
		<rewrite from="regional biomass" to="biomass"/>
		<rewrite from="H2 enduse" to="hydrogen"/>
		<rewrite from="elect_td_ind" to="electricity"/>
		<rewrite from="elect_td_res" to="electricity"/>
		<rewrite from="elect_td_com" to="electricity"/>
		<rewrite from="elect_td_trn" to="electricity"/>
		<rewrite from="delivered biomass" to="biomass"/>
		<rewrite from="elect_td_trn" to="electricity"/>
		<rewrite from="delivered coal" to="coal"/>
		<rewrite from="refined liquids industrial" to="refined liquids"/>
		</level>
		</labelRewriteList>
    </supplyDemandQuery>
	</aQuery>
	
	<aQuery>
	<all-regions/>	
	<supplyDemandQuery title="building total final energy by aggregate service">
    <axis1 name="sector">sector</axis1>
    <axis2 name="Year">demand-physical[@vintage]</axis2>
    <xPath buildList="true" dataName="input" group="false" sumAll="false">*[@type='sector' and (@name='building' or (exists(child::keyword[@final-energy='building'])))]//
               *[@type='input' (:collapse:)]/demand-physical/node()</xPath>
    <comments/>
	<labelRewriteList append-values="false">
	<level name="sector">
			<rewrite from="comm cooking" to="Cooking"/>
            <rewrite from="comm hvac" to="Cooling"/>
			<rewrite from="comm lighting" to="Lighting"/>
            <rewrite from="comm others" to="Others"/>
			<rewrite from="comm ref" to="Others"/>
			<rewrite from="resid rural apploth" to="Others"/>
            <rewrite from="resid rural cooking" to="Cooking"/>
			<rewrite from="resid rural space heating" to="Heating"/>
            <rewrite from="resid rural lighting" to="Lighting"/>
			<rewrite from="resid rural coolers" to="Cooling"/>
            <rewrite from="resid rural cooling" to="Cooling"/>
			<rewrite from="resid urban apploth" to="Others"/>
            <rewrite from="resid urban cooking" to="Cooking"/>
			<rewrite from="resid urban space heating" to="Heating"/>
            <rewrite from="resid urban lighting" to="Lighting"/>
			<rewrite from="resid urban coolers" to="Cooling"/>
            <rewrite from="resid urban cooling" to="Cooling"/>
	</level>
	</labelRewriteList>	
    </supplyDemandQuery>
	</aQuery>
	
	<aQuery>
	<all-regions/>	
	<supplyDemandQuery title="building final energy by service (Cooking) and fuel">
    <axis1 name="sector">sector</axis1>
    <axis2 name="Year">demand-physical[@vintage]</axis2>
    <xPath buildList="true" dataName="input" group="false" sumAll="false">*[@type='sector' and (@name='building' or (exists(child::keyword[@final-energy='building'])))]//
               *[@type='input']/demand-physical/node()</xPath>
    <comments/>
	<labelRewriteList append-values="false">
	<level name="sector">
			<rewrite from="comm cooking" to="Cooking"/>
            <rewrite from="resid rural cooking" to="Cooking"/>
			<rewrite from="resid urban cooking" to="Cooking"/>
	</level>
	<level name="input">
		<rewrite from="wholesale gas" to="natural gas"/>
		<rewrite from="regional coal" to="coal"/>
		<rewrite from="refined liquids enduse" to="refined liquids"/>
		<rewrite from="regional biomass" to="biomass"/>
		<rewrite from="H2 enduse" to="hydrogen"/>
		<rewrite from="elect_td_ind" to="electricity"/>
		<rewrite from="elect_td_res" to="electricity"/>
		<rewrite from="elect_td_com" to="electricity"/>
		<rewrite from="elect_td_trn" to="electricity"/>
		<rewrite from="delivered biomass" to="biomass"/>
		<rewrite from="elect_td_trn" to="electricity"/>
		<rewrite from="delivered coal" to="coal"/>
		<rewrite from="refined liquids industrial" to="refined liquids"/>
		</level>
		</labelRewriteList>
	</supplyDemandQuery>
	</aQuery>

	
	<!-- Industry -->
	<aQuery>
	<all-regions/>
	<supplyDemandQuery title="industry final energy by fuel">
    <axis1 name="input">input</axis1>
    <axis2 name="Year">demand-physical[@vintage]</axis2>
    <xPath buildList="true" dataName="input" group="false" sumAll="false">*[@type='sector' (:collapse:) and (@name='industry' or (exists(child::keyword[@final-energy='industry'])))]//
               *[@type='input' and (@name='delivered biomass' or @name='delivered coal' or
               @name='H2 enduse' or @name='elect_td_ind' or @name='wholesale gas' or
               @name='refined liquids industrial')]/demand-physical/node()</xPath>
    <comments/>
	<labelRewriteList append-values="false">
	<level name="input">
		<rewrite from="wholesale gas" to="natural gas"/>
		<rewrite from="regional coal" to="coal"/>
		<rewrite from="refined liquids enduse" to="refined liquids"/>
		<rewrite from="regional biomass" to="biomass"/>
		<rewrite from="H2 enduse" to="hydrogen"/>
		<rewrite from="elect_td_ind" to="electricity"/>
		<rewrite from="elect_td_res" to="electricity"/>
		<rewrite from="elect_td_com" to="electricity"/>
		<rewrite from="elect_td_trn" to="electricity"/>
		<rewrite from="delivered biomass" to="biomass"/>
		<rewrite from="elect_td_trn" to="electricity"/>
		<rewrite from="delivered coal" to="coal"/>
		<rewrite from="refined liquids industrial" to="refined liquids"/>
		<rewrite from="delivered gas" to="natural gas"/>
	</level>
	</labelRewriteList>	
    </supplyDemandQuery>
	</aQuery>

    
	<!-- Agriculture -->
	<aQuery>
	<all-regions/>
	<supplyDemandQuery title="Agriculture final energy by service and fuel">
    <axis1 name="input">input</axis1>
    <axis2 name="Year">demand-physical[@vintage]</axis2>
    <xPath buildList="true" dataName="input" group="false" sumAll="false">*[@type='sector' and (@name='Agriculture' or (exists(child::keyword[@final-energy='Agriculture'])))]//
               *[@type='input' and (@name='delivered biomass' or @name='delivered coal' or
               @name='H2 enduse' or @name='elect_td_ind' or @name='wholesale gas' or
               @name='refined liquids industrial')]/demand-physical/node()</xPath>
    <comments>process heat cement assigned to cement</comments>
    <labelRewriteList append-values="false">
        <level name="input">
            <rewrite from="elect_td_ind" to="electricity"/>
			<rewrite from="refined liquids industrial" to="refined liquids"/>	
        </level>
    </labelRewriteList>
    </supplyDemandQuery>
	</aQuery>
	
	<aQuery>
	<all-regions/>
	<supplyDemandQuery title="final energy consumption by sector and fuel">
    <axis1 name="input">input</axis1>
    <axis2 name="Year">demand-physical[@vintage]</axis2>
    <xPath buildList="true" dataName="input" group="false" sumAll="false">*[@type='sector' and ((@name='building' or @name='industry' or @name='transportation') or
            (exists(child::keyword/@final-energy)))]//*[@type='input' and
            not(@name='limestone' or @name='process heat cement' or @name='industrial energy use' or
                @name='industrial feedstocks' or @name='renewable' or contains(@name, 'trn_') or @name='oil-credits')]/
            demand-physical[@unit='EJ']/node()</xPath>
    <comments/>
    <labelRewriteList append-values="false">
        <level name="input">
            <rewrite from="elect_td_bld" to="electricity"/>
            <rewrite from="wholesale gas" to="gas"/>
            <rewrite from="regional coal" to="coal"/>
            <rewrite from="refined liquids enduse" to="refined liquids"/>
            <rewrite from="regional biomass" to="biomass"/>
            <rewrite from="H2 enduse" to="hydrogen"/>
            <rewrite from="elect_td_ind" to="electricity"/>
            <rewrite from="delivered biomass" to="biomass"/>
            <rewrite from="elect_td_trn" to="electricity"/>
            <rewrite from="delivered coal" to="coal"/>
            <rewrite from="refined liquids industrial" to="refined liquids"/>
            <rewrite from="delivered gas" to="gas"/>
        </level>
    </labelRewriteList>
</supplyDemandQuery>
</aQuery>

<aQuery>
<supplyDemandQuery title="elec gen costs by tech">
    <axis1 name="technology">technology</axis1>
    <axis2 name="Year">cost</axis2>
    <xPath buildList="true" dataName="cost" group="false" sumAll="false">*[@type='sector' and (@name='electricity' or @name='elect_td_bld')]/*[@type='subsector']/
              *[@type='technology' and not(@name='elect_td_bld')]/cost/text()</xPath>
    <comments/>
</supplyDemandQuery>
</aQuery>	

<aQuery>
<marketQuery title="CO2 prices">
    <axis1 name="market">market</axis1>
    <axis2 name="Year">market</axis2>
    <xPath buildList="true" dataName="price" group="false" sumAll="false">Marketplace/market[true() and contains(@name,'CO2')]/price/node()</xPath>
    <comments/>
</marketQuery>
</aQuery>

<aQuery>
<supplyDemandQuery title="fuel prices to buildings">
    <axis1 name="fuel">sector</axis1>
    <axis2 name="Year">cost</axis2>
    <xPath buildList="true" dataName="cost" group="false" sumAll="false">*[@type='sector' and (@name='delivered gas' or @name='traditional biomass' or
               @name='delivered coal' or @name='delivered biomass' or @name='elect_td_bld' or
               @name='refined liquids enduse')]/cost/text()</xPath>
    <comments/>
</supplyDemandQuery>
</aQuery>

<aQuery>
<supplyDemandQuery title="fuel prices to industry">
    <axis1 name="fuel">sector</axis1>
    <axis2 name="Year">cost</axis2>
    <xPath buildList="true" dataName="cost" group="false" sumAll="false">*[@type='sector' and (@name='wholesale gas' or @name='delivered coal' or
               @name='delivered biomass' or @name='H2 enduse' or @name='elect_td_ind' or
               @name='refined liquids industrial')]/cost/text()</xPath>
    <comments/>
</supplyDemandQuery>
</aQuery>

<aQuery>
<supplyDemandQuery title="fuel prices to transport">
    <axis1 name="fuel">sector</axis1>
    <axis2 name="Year">cost</axis2>
    <xPath buildList="true" dataName="cost" group="false" sumAll="false">*[@type='sector' and (@name='delivered gas' or @name='delivered coal' or @name='elect_td_trn'
               or @name='refined liquids enduse' or @name='H2 enduse')]/cost/text()</xPath>
    <comments/>
</supplyDemandQuery>
</aQuery>

    
</queries>
   
